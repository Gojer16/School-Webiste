from pydantic import BaseModel

class TeacherBase(BaseModel):
    """
    Shared base schema for Teacher profile information.

    Attributes:
        name (str): Teacher's full name (required).
        bio (str | None): Optional biography/description.
        image_url (str | None): Optional profile image URL.
        is_active (bool): Whether this profile is active.
    """
    name: str
    bio: str | None = None
    image_url: str | None = None
    is_active: bool = True

class TeacherProfileCreate(TeacherBase):
    """
    Schema for creating a new Teacher profile.

    Inherits all attributes from TeacherBase.
    Additional fields like 'id' or 'user_id' are excluded
    because they are auto-generated by the database.
    """
    pass

class TeacherProfile(TeacherBase):
    """
    Schema for reading a Teacher profile from the database.

    Attributes:
        id (int): Unique identifier for the teacher profile.
        user_id (int): ID of the associated user account.

    Config:
        orm_mode (bool): Enables compatibility with SQLAlchemy
        ORM objects, so Pydantic can map DB models directly
        into this schema.
    """
    id: int
    user_id: int

    class Config:
        orm_mode = True
